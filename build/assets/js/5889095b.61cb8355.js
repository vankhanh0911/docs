"use strict";(self.webpackChunkkhanhhv_docs=self.webpackChunkkhanhhv_docs||[]).push([[5559],{4137:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),g=a,d=c["".concat(s,".").concat(g)]||c[g]||u[g]||i;return n?o.createElement(d,r(r({ref:t},m),{},{components:n})):o.createElement(d,r({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,r[1]=l;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7048:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=n(3117),a=(n(7294),n(4137));const i={title:"Open Commit",description:"Open Commit",slug:"/conventions/conventional-commits/extensions/open-commit",last_update:{date:"03/29/2023",author:"Truong Vi"}},r=void 0,l={unversionedId:"Conventions/ConventionalCommits/Extensions/open-commit",id:"Conventions/ConventionalCommits/Extensions/open-commit",title:"Open Commit",description:"Open Commit",source:"@site/docs/Conventions/ConventionalCommits/Extensions/open-commit.mdx",sourceDirName:"Conventions/ConventionalCommits/Extensions",slug:"/conventions/conventional-commits/extensions/open-commit",permalink:"/docs/build/docs/conventions/conventional-commits/extensions/open-commit",draft:!1,tags:[],version:"current",lastUpdatedBy:"Truong Vi",lastUpdatedAt:1680022800,formattedLastUpdatedAt:"Mar 28, 2023",frontMatter:{title:"Open Commit",description:"Open Commit",slug:"/conventions/conventional-commits/extensions/open-commit",last_update:{date:"03/29/2023",author:"Truong Vi"}},sidebar:"conventionalCommits",previous:{title:"Rules",permalink:"/docs/build/docs/conventions/conventional-commits/rules"}},s={},p=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Preface commits with emoji \ud83e\udd20",id:"preface-commits-with-emoji-",level:3},{value:"Postface commits with descriptions of changes",id:"postface-commits-with-descriptions-of-changes",level:3},{value:"Internationalization support",id:"internationalization-support",level:3},{value:"Git flags",id:"git-flags",level:3},{value:"Ignore files",id:"ignore-files",level:3},{value:"Git hook",id:"git-hook",level:2}],m={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{src:"https://raw.githubusercontent.com/di-sukharev/opencommit/HEAD/.github/opencommit-example.png",alt:"OpenCommit example"})),(0,a.kt)("p",null,"All the commits in this repo are done with OpenCommit \u2014 look into ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/di-sukharev/opencommit/commit/eae7618d575ee8d2e9fff5de56da79d40c4bc5fc"},"the commits")," to see how OpenCommit works. Emoji and long commit description text is configurable."),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install OpenCommit globally to use in any repository:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm install -g opencommit\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Get your API key from ",(0,a.kt)("a",{parentName:"p",href:"https://platform.openai.com/account/api-keys"},"OpenAI"),". Make sure you add payment details, so API works.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the key to OpenCommit config:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"opencommit config set OPENAI_API_KEY=<your_api_key>\n")),(0,a.kt)("p",{parentName:"li"},"Your api key is stored locally in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.opencommit")," config file."))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"You can call OpenCommit directly to generate a commit message for your staged changes:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git add <files...>\nopencommit\n")),(0,a.kt)("p",null,"You can also use the ",(0,a.kt)("inlineCode",{parentName:"p"},"oc")," shortcut:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git add <files...>\noc\n")),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("h3",{id:"preface-commits-with-emoji-"},"Preface commits with emoji \ud83e\udd20"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://gitmoji.dev/"},"GitMoji")," convention is used."),(0,a.kt)("p",null,"To add emoji:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc config set emoji=true\n")),(0,a.kt)("p",null,"To remove emoji:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc config set emoji=false\n")),(0,a.kt)("h3",{id:"postface-commits-with-descriptions-of-changes"},"Postface commits with descriptions of changes"),(0,a.kt)("p",null,"To add descriptions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc config set description=true\n")),(0,a.kt)("p",null,"To remove description:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc config set description=false\n")),(0,a.kt)("h3",{id:"internationalization-support"},"Internationalization support"),(0,a.kt)("p",null,"To specify the language used to generate commit messages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"# de, German ,Deutsch\noc config set language=de\noc config set language=German\noc config set language=Deutsch\n\n# fr, French, fran\xe7aise\noc config set language=fr\noc config set language=French\noc config set language=fran\xe7aise\n")),(0,a.kt)("p",null,"The default language set is ",(0,a.kt)("strong",{parentName:"p"},"English"),(0,a.kt)("br",{parentName:"p"}),"\n","All available languages are currently listed in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/di-sukharev/opencommit/tree/master/src/i18n"},"i18n")," folder"),(0,a.kt)("h3",{id:"git-flags"},"Git flags"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"opencommit")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"oc")," commands can be used in place of the ",(0,a.kt)("inlineCode",{parentName:"p"},'git commit -m "${generatedMessage}"')," command. This means that any regular flags that are used with the ",(0,a.kt)("inlineCode",{parentName:"p"},"git commit")," command will also be applied when using ",(0,a.kt)("inlineCode",{parentName:"p"},"opencommit")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"oc"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc --no-verify\n")),(0,a.kt)("p",null,"is translated to :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'git commit -m "${generatedMessage}" --no-verify\n')),(0,a.kt)("h3",{id:"ignore-files"},"Ignore files"),(0,a.kt)("p",null,"You can ignore files from submission to OpenAI by creating a ",(0,a.kt)("inlineCode",{parentName:"p"},".opencommitignore")," file. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ignorelang"},"path/to/large-asset.zip\n**/*.jpg\n")),(0,a.kt)("p",null,"This is useful for preventing opencommit from uploading artifacts and large files."),(0,a.kt)("p",null,"By default, opencommit ignores files matching: ",(0,a.kt)("inlineCode",{parentName:"p"},"*-lock.*")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"*.lock")),(0,a.kt)("h2",{id:"git-hook"},"Git hook"),(0,a.kt)("p",null,"You can set OpenCommit as Git ",(0,a.kt)("a",{parentName:"p",href:"https://git-scm.com/docs/githooks#_prepare_commit_msg"},(0,a.kt)("inlineCode",{parentName:"a"},"prepare-commit-msg"))," hook. Hook integrates with you IDE Source Control and allows you edit the message before commit."),(0,a.kt)("p",null,"To set the hook:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc hook set\n")),(0,a.kt)("p",null,"To unset the hook:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"oc hook unset\n")),(0,a.kt)("p",null,"To use the hook:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"git add <files...>\ngit commit\n")),(0,a.kt)("p",null,"Or follow the process of your IDE Source Control feature, when it calls ",(0,a.kt)("inlineCode",{parentName:"p"},"git commit")," command \u2014 OpenCommit will integrate into the flow."))}c.isMDXComponent=!0}}]);